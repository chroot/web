#!/bin/bash
# Version: 1.1
# Summary: This is a bootstrap script that's used as a startup script.  When running on first boot it
# the script stitches together several Ansible roles to make a "working" system.
#	- Example of a 'aws-web-001' system
#		- the first actions of the script will be to install the SSH keys, install Ansible and Git for use
#		- next the script will install the `system-cron-ansible` playbook.  This playbook is used to harden the system and set the security "baseline" 
#		- next parsing out the 'web' portion of it's name the scripts first Ansible role inside git that begins to set this host up as a 'web' server
#			- in this example the 'web' server has a 'requirements' file; meaning it requires additional roles to work properly
#			- by installing these 'requirements' the system then begins to stitch itself together; finally leaving a fully functional system
# 			This was done for my production in Google Compute; I used a startup snippet to download this bootstrap file and run it on first boot
# 	`cd /tmp/
#	bash <(curl -s http://192.168.123.123/bootstrap)`
# Group: System Tools
# License: GPL
# Requires: ansible, libselinux-python, git
# Changelog:
#       20150723 - Matt Wells
#               1.0 - First deployment

# md5 sums of ssh files to be deployed
ID_RSA_MD5='037ec7ef8946e4b623efc66a484a43e3'
ID_RSA_PUB_MD5='8460453586f6a5a509a3ca5c50cc4ef5'
KNOWN_HOSTS_MD5='3877a10be3b07d9fe5eb1930c14bec25'

setupsvcHome () {  # this sets up the anisble service account that will be used
    useradd svc_ansible
    chown svc_ansible:svc_ansible -R /home/svc_ansible/.ssh/
    chmod 600 /home/svc_ansible/.ssh/*
    if [ ! -d /opt/hardening ]; then
    	mkdir -p /opt/hardening
    	chmod 2770 /opt/hardening
    	chown -R svc_ansible:svc_ansible /opt/hardening
    fi
    # These SSH Keys are base64 encoded.
    [ -f ${serviceHome}/.ssh/id_rsa.pub ] || touch ${serviceHome}/.ssh/id_rsa.pub

    CUR_SUM=`gimmeSum ${serviceHome}/.ssh/id_rsa.pub`

    if [ $ID_RSA_PUB_MD5 != $CUR_SUM ]; then

		base64 -d > ${serviceHome}/.ssh/id_rsa.pub << EOM
c3NoLXJzYSBBQUFBQjNOemFDMXljMkVBQUFBREFRQUJBQUFCQVFEcExDQWRsQkxqSmNMczhzQ2I4
Z3NzUDA3OURIR2dRWXk1WW16UDNTamZoWVdhcSttVkJJZHRZM1Qvam92dGwyYjNrZ29hUlNqMWFK
bWg3cTlLWXNwMzYvTVVnOTB6c3hRbmViTGJpTlNzMnlLeVZIM3lvV25nM29zLzROQ09FNDVPTm4r
RStwaEZ5RU56MXluQ0k1QVUrcW1tc002bDN1YkJJeXdsZEFlRXRwaTdEY25lbzE2NC9naGo2blJv
eUpSdVFzdEpPRUdsOFg2WnVWVElTcmEwSGlWcWppRkNHc3FmZnQ5UEZUT2FSMmVuZUJDYkM0VTZ0
VzlxMHNnRWZqNW5YVW9XL3FhVzVQckRyaEVyQnVrdHNkeEdrbzV0T05jeE0xNlczVTJsQXdjVVpW
U2RFcFI5c2huMkZFYkNHRk5QSVBpb1RwY0RTdkdOalZrdVRMVG4gc3ZjX2Fuc2libGVAa2lkZmxh
c2gubm9pcC5tZQo=
EOM

	restorecon ${serviceHome}/.ssh/id_rsa.pub
	chown ${svcAccount}:${svcAccount} -R ${serviceHome}
	fi

    [ -f ${serviceHome}/.ssh/id_rsa ] || touch ${serviceHome}/.ssh/id_rsa

    CUR_SUM=`gimmeSum ${serviceHome}/.ssh/id_rsa`

    if [ $ID_RSA_MD5 != $CUR_SUM ]; then

		base64 -d > ${serviceHome}/.ssh/id_rsa << EOM
LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBNlN3Z0haUVM0
eVhDN1BMQW0vSUxMRDlPL1F4eG9FR011V0pzejkwbzM0V0ZtcXZwCmxRU0hiV04wLzQ2TDdaZG05
NUlLR2tVbzlXaVpvZTZ2U21MS2QrdnpGSVBkTTdNVUozbXkyNGpVck5zaXNsUjkKOHFGcDRONkxQ
K0RRamhPT1RqWi9oUHFZUmNoRGM5Y3B3aU9RRlBxcHByRE9wZDdtd1NNc0pYUUhoTGFZdXczSgoz
cU5ldVA0SVkrcDBhTWlVYmtMTFNUaEJwZkYrbWJsVXlFcTJ0QjRsYW80aFFocktuMzdmVHhVem1r
ZG5wM2dRCm13dUZPclZ2YXRMSUJINCtaMTFLRnY2bWx1VDZ3NjRSS3dicExiSGNScEtPYlRqWE1U
TmVsdDFOcFFNSEZHVlUKblJLVWZiSVo5aFJHd2hoVFR5RDRxRTZYQTByeGpZMVpMa3kwNXdJREFR
QUJBb0lCQVFDUVY4cUJ4UHAwTnhvVwpDS2lIWVN6ZGRVdDJocytJUDB2WUx6L2c1YTI1d1RSVjdY
b3B6Nlh1WjVVejVwQmt3a2J4bHl3OTJ2WmlCU0NtCkI5WG5uSVJ0L0ZoOEtLMDBwZlVpQXNwZjhM
S0hWeGlCZ0tCL0pNRWdmV09DWmE5MVpGSEJ4U2Juc1NHMmdTU1EKZjIvUVNLZVc5UjAwblZzdmYy
OGx2SnBGalRCaVRHQjFvbTNTVHNGdGNmSGxzVXNmcTFPUm40WkUzRWpPaWdDbgpBN1V6VThJMEEv
bXIxZ3owbVFHTmpaQzczSjBGaFhvTGVWSlFUblVTRG0wM00xV2FqUWlLYzdCclovL2R4aXBFCmFW
Sk9CbS9YSTlkMjdsdnJmM0dQMVFJMlM3eW85S2hmbDJrcHJzRnlWQmJoRHJiME04eDVsU1VjYkpB
NGk0ZnIKSW9XeWUvYnhBb0dCQVBmdG5VLzh5L0pFOVhCaUZiQWdoY2dENDc4MFNVY0N6ZHV6ZXFq
YlB3aEpRY01NTC9yZgorbkJIZTJqaGVNbW13bURKTWFJTEFnVHBzSTM5UEJzY3o3amNmaTczOWNR
b1pHMEE3alJPL01weDVPc2ZrM2poCkxQZlI2YnB4SzYweUR6eVdUL1BQTEVLNXZ3SkZEY0RRR0tZ
b1IzZEdtdXR3UzZYMU43TGdHQUV0QW9HQkFQREQKaHVTWCtOZndHem1zZVRQSnR6bHNLQXlZeGRv
ZlhmSlRCQVk2dEQwNmhrZGpUZE82MGpVNWNNQmNWbzVDTkFWUApXeFJ1aWRCNS9MN0RTZU9tNlRs
SU5kbjRFdGl0ZlR3QThiaHhIZWpJK2w3cTZiWitMa3N0bjZ3dGxPOWlQMTFnCmhBMWRrWEVSdDh1
ZlgxZ0hBYTIvc2QrcmF4TXcvWm5zbUx1d3VKTGpBb0dCQU9VQlozaDF3aEJqSCs2UnV3UzMKMWJx
OTFRVk5ENDUzQ1owdytGQzJTMCtsRXdoTjNwZTFnVWRxejVRK0Irc0RqTElIeFQrdk9VcytiQ1dM
VHBTZwpsVUprOEcwRC90QVVtMGFRUUhheXF3OTRDb0lmNVlFWFJRa1hyUFBaQ3dYc29tUk5WMGFX
QzRVS3UyTW1VNkRRCjFxUEx1czl5dVRCVnhwcGhtZlF3eUJ0MUFvR0JBS0tIUzd0cS85Zzl4Uk0w
NUFqYXhlNWtuZENMSFJ6M0NjTjQKMlFHZmhXYkQ2RHV1eEs0R3NycXRVUGo2SEpBaUR0MzZ5UUJN
OG9taW44VGpMakVZenQ0VmFnei9rekZrUkdOSwpPK01Ic1dvZ3FpdURKMHhEZDlyV0xMRGRnR250
Qjl0d09SU1Fzb3NDcS9Fd1gvdWJsejJFWjM0WFNNd0d5VnVzClJScUczTUtEQW9HQVBMZHNJbjBB
Z1FQRFJ6MUFjQ0w1VDR0VlJPT3d4Q2R0VFZEUVhWYkxhZXhCS1llQ2RONEsKTXdXZlBqUUl4cVZE
RTFCcnlhZXV6MWV0RmVQdkY1RFdTY0Nrem5BNWo1UnoxRmhNZ2paYkhtMkdpVGhpLzVjVwpFUUdq
WE0wZExUV0dhV0F3bkE3eVlFMms3WHZCcjVFK1hFSk1aaG5vTlRVZ3lIWDF1RzVsQzEwPQotLS0t
LUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
EOM

		restorecon ${serviceHome}/.ssh/id_rsa
		chmod 0600 ${serviceHome}/.ssh/id_rsa
		chown ${svcAccount}:${svcAccount} -R ${serviceHome}
	fi

    [ -f ${serviceHome}/.ssh/known_hosts ] || touch ${serviceHome}/.ssh/known_hosts

    CUR_SUM=`gimmeSum ${serviceHome}/.ssh/known_hosts`

    if [ $KNOWN_HOSTS_MD5 != $CUR_SUM ]; then

		base64 -d > ${serviceHome}/.ssh/known_hosts << EOM
Z2l0aHViLmNvbSwxOTIuMzAuMjUzLjExMyBzc2gtcnNhIEFBQUFCM056YUMxeWMyRUFBQUFCSXdB
QUFRRUFxMkE3aFJHbWRubTl0VURiTzlJRFN3Qks2VGJRYStQWFlQQ1B5NnJiVHJUdHc3UEhrY2NL
cnBwMHlWaHA1SGRFSWNLcjZwTGxWREJmT0xYOVFVc3lDT1Ywd3pmaklKTmxHRVlzZGxMSml6SGhi
bjJtVWp2U0FIUXFaRVRZUDgxZUZ6TFFOblBIdDRFVlZVaDdWZkRFU1U4NEtlem1ENVFsV3BYTG12
VTMxL3lNZitTZTh4aEhUdktTQ1pJRkltV3dvRzZtYlVvV2Y5bnpwSW9hU2pCK3dlcXFVVW1wYWFh
c1hWYWw3MkorVVgyQisyUlBXM1JjVDBlT3pRZ3FsSkwzUktyVEp2ZHNqRTNKRUF2R3EzbEdIU1pY
eTI4RzNza3VhMlNtVmkvdzR5Q0U2Z2JPRHFuVFdsZzcrd0M2MDR5ZEdYQThWSmlTNWFwNDNKWGlV
RkZBYVE9PQo=
EOM

# just in case... I'll set the permissions again... and again...
		chmod 0644 ${serviceHome}/.ssh/known_hosts
		restorecon ${serviceHome}/.ssh/known_hosts
		chown ${svcAccount}:${svcAccount} -R ${serviceHome}

	fi
}

ansibleInstaller () { # now we're installing git and ansible
yum install ansible git -y 
if [ ! -f /var/log/ansible.log ]; then
	touch /var/log/ansible.log
	chmod 664 /var/log/ansible.log
	chown svc_ansible /var/log/ansible.log # Yep, more permissions
	chcon system_u:object_r:var_log_t:s0 /var/log/ansible.log
fi

# just in case... more permissions
chmod 664 /var/log/ansible.log
chown svc_ansible /var/log/ansible.log
chcon system_u:object_r:var_log_t:s0 /var/log/ansible.log

if [ ! -f /opt/hardening/localhost ]; then # let's also look for an inventory file; while not always needed when dealing with 'localhost' it's just cleaner
echo "[localhost]
localhost ansible_connection=local" > /opt/hardening/localhost
fi
}

ansibleRunner () { # here we go
	hostType=`hostname | awk -F\- '{print $2}'` # with our example hostname, let's pull out the `www` portion
        chown svc_ansible:svc_ansible -R /etc/ansible/roles # yep... permissions

	sed -i "s/#log_path/log_path/g" /etc/ansible/ansible.cfg # because we're using a service account we need to change the logging
	cd /opt/hardening/ # you don't 100% need to do this, but again it's cleaner and I don't have to worry about your shell settings
	# this would be so much cleaner via tower
	sudo -u svc_ansible /usr/bin/ansible-pull --accept-host-key -d /opt/hardening/system-cron-ansible -i /opt/hardening/localhost -U "git@github.com:chroot/system-cron.git" /opt/hardening/system-cron-ansible/local.yml
	if [ "$?" != "0" ]; then
		exit 1
	fi
	
	if [ -f "/opt/hardening/sys-type.yml" ]; then # this is a bit of a mess however because of the role order you have to spawn a seperate process to do this well
		sudo -u svc_ansible ansible-galaxy install -r /opt/hardening/sys-type.yml
	fi		

	if [ -f "/etc/ansible/roles/${hostType}/requirements.yml" ]; then # now the 'www' role is installed let's look for any 'requirements'; if we see one let's set it up
		sudo -u svc_ansible ansible-galaxy install -r /etc/ansible/roles/${hostType}/requirements.yml
		sudo -u svc_ansible ansible-playbook /opt/hardening/sys-install.yml -i /opt/hardening/localhost
	fi
}


setupsvcHome
ansibleInstaller
ansibleRunner
